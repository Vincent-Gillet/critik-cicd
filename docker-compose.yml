services:
  jenkins:
    build: .
    user: root
    ports:
      - 8070:8080
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - ./jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - critik_network

  angular:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    networks:
      - critik_network

  mysql:
    image: mysql:8.3
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: db-critik
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - critik_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD" ]
      interval: 5s
      timeout: 5s
      retries: 10

  spring:
    build:
      context: ./api
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    networks:
      - critik_network
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://localhost:3306/db-critik?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root


volumes:
  mysql_data:

networks:
  critik_network:
    driver: bridge